version: '3'

services:
  db:
    image: localhost:5000/db_image:0.0.1
    container_name: database
    restart: always
    networks:
      - back
    volumes:
    - db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U django"]
      interval: 5s
      timeout: 5s
      retries: 5


  backend:
    image: localhost:5000/backend:0.0.1
    container_name: back
    restart: always
    environment:
      - django_pass
    networks:
      - front
      - back
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: curl --fail http://localhost:8000/admin/login/ || exit 1
      interval: 5s
      timeout: 5s
      retries: 5


  frontend:
    image: localhost:5000/frontend:0.0.1
    container_name: front
    restart: always
    networks:
      - front
    ports:
      - "80:80"
    healthcheck:
      test: curl --fail http://localhost/bbks/ || exit 1
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  db-volume:

networks:
  front:
    name: front-network
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.6.0/24
          gateway: 192.168.6.1
  back:
    name: back-network
    driver: bridge
    internal: true
    ipam:
      config:
        - subnet: 192.168.7.0/24
          gateway: 192.168.7.1
